C     This File is Automatically generated by ALOHA 
C     The process calculated in this file is: 
C     -(Epsilon(1,2,3,-2)*P(-2,3)*P(-1,1)*P(-1,2)) +
C      Epsilon(1,2,3,-2)*P(-2,2)*P(-1,1)*P(-1,3) + Epsilon(2,3,-1,-2)*P
C     (-2,3)*P(-1,1)*P(1,2) - Epsilon(2,3,-1,-2)*P(-2,2)*P(-1,1)*P(1,3)
C      + Epsilon(1,3,-1,-2)*P(-2,3)*P(-1,2)*P(2,1) -
C      Epsilon(1,2,-1,-2)*P(-2,3)*P(-1,2)*P(3,1) + Epsilon(3,-1,-2,-3)*
C     P(-3,3)*P(-2,2)*P(-1,1)*Metric(1,2) - Epsilon(2,-1,-2,-3)*P(-3,3)
C     *P(-2,2)*P(-1,1)*Metric(1,3)
C     
      SUBROUTINE VVV5_0(V1, V2, V3, COUP,VERTEX)
      IMPLICIT NONE
      COMPLEX*16 CI
      PARAMETER (CI=(0D0,1D0))
      COMPLEX*16 TMP10
      REAL*8 P3(0:3)
      COMPLEX*16 TMP21
      COMPLEX*16 TMP14
      COMPLEX*16 COUP
      COMPLEX*16 TMP9
      COMPLEX*16 TMP18
      COMPLEX*16 V3(*)
      COMPLEX*16 TMP11
      REAL*8 P2(0:3)
      COMPLEX*16 TMP20
      COMPLEX*16 TMP6
      COMPLEX*16 TMP15
      COMPLEX*16 TMP19
      COMPLEX*16 V2(*)
      COMPLEX*16 TMP12
      REAL*8 P1(0:3)
      COMPLEX*16 TMP7
      COMPLEX*16 TMP16
      COMPLEX*16 VERTEX
      COMPLEX*16 V1(*)
      COMPLEX*16 TMP13
      COMPLEX*16 TMP17
      COMPLEX*16 TMP8
      P1(0) = DBLE(V1(1))
      P1(1) = DBLE(V1(2))
      P1(2) = DIMAG(V1(2))
      P1(3) = DIMAG(V1(1))
      P2(0) = DBLE(V2(1))
      P2(1) = DBLE(V2(2))
      P2(2) = DIMAG(V2(2))
      P2(3) = DIMAG(V2(1))
      P3(0) = DBLE(V3(1))
      P3(1) = DBLE(V3(2))
      P3(2) = DIMAG(V3(2))
      P3(3) = DIMAG(V3(1))
      TMP6 = (P2(0)*P1(0)-P2(1)*P1(1)-P2(2)*P1(2)-P2(3)*P1(3))
      TMP20 = (-1D0)*(P1(0)*(P2(1)*(V2(6)*P3(2)-V2(5)*P3(3))+(P2(2)
     $ *(V2(4)*P3(3)-V2(6)*P3(1))+P2(3)*(V2(5)*P3(1)-V2(4)*P3(2))))
     $ +(P1(1)*(P2(0)*(V2(5)*P3(3)-V2(6)*P3(2))+(P2(2)*(V2(6)*P3(0)
     $ -V2(3)*P3(3))+P2(3)*(V2(3)*P3(2)-V2(5)*P3(0))))+(P1(2)*(P2(0)
     $ *(V2(6)*P3(1)-V2(4)*P3(3))+(P2(1)*(V2(3)*P3(3)-V2(6)*P3(0))
     $ +P2(3)*(V2(4)*P3(0)-V2(3)*P3(1))))+P1(3)*(P2(0)*(V2(4)*P3(2)
     $ -V2(5)*P3(1))+(P2(1)*(V2(5)*P3(0)-V2(3)*P3(2))+P2(2)*(V2(3)
     $ *P3(1)-V2(4)*P3(0)))))))
      TMP21 = (V3(3)*V1(3)-V3(4)*V1(4)-V3(5)*V1(5)-V3(6)*V1(6))
      TMP12 = (V1(3)*P3(0)-V1(4)*P3(1)-V1(5)*P3(2)-V1(6)*P3(3))
      TMP10 = (P2(0)*V1(3)-P2(1)*V1(4)-P2(2)*V1(5)-P2(3)*V1(6))
      TMP19 = (V1(3)*V2(3)-V1(4)*V2(4)-V1(5)*V2(5)-V1(6)*V2(6))
      TMP18 = (-1D0)*(P1(0)*(P2(1)*(V3(6)*P3(2)-V3(5)*P3(3))+(P2(2)
     $ *(V3(4)*P3(3)-V3(6)*P3(1))+P2(3)*(V3(5)*P3(1)-V3(4)*P3(2))))
     $ +(P1(1)*(P2(0)*(V3(5)*P3(3)-V3(6)*P3(2))+(P2(2)*(V3(6)*P3(0)
     $ -V3(3)*P3(3))+P2(3)*(V3(3)*P3(2)-V3(5)*P3(0))))+(P1(2)*(P2(0)
     $ *(V3(6)*P3(1)-V3(4)*P3(3))+(P2(1)*(V3(3)*P3(3)-V3(6)*P3(0))
     $ +P2(3)*(V3(4)*P3(0)-V3(3)*P3(1))))+P1(3)*(P2(0)*(V3(4)*P3(2)
     $ -V3(5)*P3(1))+(P2(1)*(V3(5)*P3(0)-V3(3)*P3(2))+P2(2)*(V3(3)
     $ *P3(1)-V3(4)*P3(0)))))))
      TMP14 = (P1(0)*V2(3)-P1(1)*V2(4)-P1(2)*V2(5)-P1(3)*V2(6))
      TMP15 = (-1D0)*(P2(0)*(P3(1)*(V3(5)*V1(6)-V3(6)*V1(5))+(P3(2)
     $ *(V3(6)*V1(4)-V3(4)*V1(6))+P3(3)*(V3(4)*V1(5)-V3(5)*V1(4))))
     $ +(P2(1)*(P3(0)*(V3(6)*V1(5)-V3(5)*V1(6))+(P3(2)*(V3(3)*V1(6)
     $ -V3(6)*V1(3))+P3(3)*(V3(5)*V1(3)-V3(3)*V1(5))))+(P2(2)*(P3(0)
     $ *(V3(4)*V1(6)-V3(6)*V1(4))+(P3(1)*(V3(6)*V1(3)-V3(3)*V1(6))
     $ +P3(3)*(V3(3)*V1(4)-V3(4)*V1(3))))+P2(3)*(P3(0)*(V3(5)*V1(4)
     $ -V3(4)*V1(5))+(P3(1)*(V3(3)*V1(5)-V3(5)*V1(3))+P3(2)*(V3(4)
     $ *V1(3)-V3(3)*V1(4)))))))
      TMP9 = (-1D0)*(P2(0)*(V1(4)*(V3(6)*V2(5)-V3(5)*V2(6))+(V1(5)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+V1(6)*(V3(5)*V2(4)-V3(4)*V2(5))))
     $ +(P2(1)*(V1(3)*(V3(5)*V2(6)-V3(6)*V2(5))+(V1(5)*(V3(6)*V2(3)
     $ -V3(3)*V2(6))+V1(6)*(V3(3)*V2(5)-V3(5)*V2(3))))+(P2(2)*(V1(3)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+(V1(4)*(V3(3)*V2(6)-V3(6)*V2(3))
     $ +V1(6)*(V3(4)*V2(3)-V3(3)*V2(4))))+P2(3)*(V1(3)*(V3(4)*V2(5)
     $ -V3(5)*V2(4))+(V1(4)*(V3(5)*V2(3)-V3(3)*V2(5))+V1(5)*(V3(3)
     $ *V2(4)-V3(4)*V2(3)))))))
      TMP17 = (-1D0)*(P2(0)*(P3(1)*(V1(6)*V2(5)-V1(5)*V2(6))+(P3(2)
     $ *(V1(4)*V2(6)-V1(6)*V2(4))+P3(3)*(V1(5)*V2(4)-V1(4)*V2(5))))
     $ +(P2(1)*(P3(0)*(V1(5)*V2(6)-V1(6)*V2(5))+(P3(2)*(V1(6)*V2(3)
     $ -V1(3)*V2(6))+P3(3)*(V1(3)*V2(5)-V1(5)*V2(3))))+(P2(2)*(P3(0)
     $ *(V1(6)*V2(4)-V1(4)*V2(6))+(P3(1)*(V1(3)*V2(6)-V1(6)*V2(3))
     $ +P3(3)*(V1(4)*V2(3)-V1(3)*V2(4))))+P2(3)*(P3(0)*(V1(4)*V2(5)
     $ -V1(5)*V2(4))+(P3(1)*(V1(5)*V2(3)-V1(3)*V2(5))+P3(2)*(V1(3)
     $ *V2(4)-V1(4)*V2(3)))))))
      TMP16 = (V3(3)*P1(0)-V3(4)*P1(1)-V3(5)*P1(2)-V3(6)*P1(3))
      TMP11 = (-1D0)*(P1(0)*(P3(1)*(V3(5)*V2(6)-V3(6)*V2(5))+(P3(2)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+P3(3)*(V3(4)*V2(5)-V3(5)*V2(4))))
     $ +(P1(1)*(P3(0)*(V3(6)*V2(5)-V3(5)*V2(6))+(P3(2)*(V3(3)*V2(6)
     $ -V3(6)*V2(3))+P3(3)*(V3(5)*V2(3)-V3(3)*V2(5))))+(P1(2)*(P3(0)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+(P3(1)*(V3(6)*V2(3)-V3(3)*V2(6))
     $ +P3(3)*(V3(3)*V2(4)-V3(4)*V2(3))))+P1(3)*(P3(0)*(V3(5)*V2(4)
     $ -V3(4)*V2(5))+(P3(1)*(V3(3)*V2(5)-V3(5)*V2(3))+P3(2)*(V3(4)
     $ *V2(3)-V3(3)*V2(4)))))))
      TMP7 = (-1D0)*(P3(0)*(V1(4)*(V3(6)*V2(5)-V3(5)*V2(6))+(V1(5)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+V1(6)*(V3(5)*V2(4)-V3(4)*V2(5))))
     $ +(P3(1)*(V1(3)*(V3(5)*V2(6)-V3(6)*V2(5))+(V1(5)*(V3(6)*V2(3)
     $ -V3(3)*V2(6))+V1(6)*(V3(3)*V2(5)-V3(5)*V2(3))))+(P3(2)*(V1(3)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+(V1(4)*(V3(3)*V2(6)-V3(6)*V2(3))
     $ +V1(6)*(V3(4)*V2(3)-V3(3)*V2(4))))+P3(3)*(V1(3)*(V3(4)*V2(5)
     $ -V3(5)*V2(4))+(V1(4)*(V3(5)*V2(3)-V3(3)*V2(5))+V1(5)*(V3(3)
     $ *V2(4)-V3(4)*V2(3)))))))
      TMP13 = (-1D0)*(P1(0)*(P2(1)*(V3(5)*V2(6)-V3(6)*V2(5))+(P2(2)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+P2(3)*(V3(4)*V2(5)-V3(5)*V2(4))))
     $ +(P1(1)*(P2(0)*(V3(6)*V2(5)-V3(5)*V2(6))+(P2(2)*(V3(3)*V2(6)
     $ -V3(6)*V2(3))+P2(3)*(V3(5)*V2(3)-V3(3)*V2(5))))+(P1(2)*(P2(0)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+(P2(1)*(V3(6)*V2(3)-V3(3)*V2(6))
     $ +P2(3)*(V3(3)*V2(4)-V3(4)*V2(3))))+P1(3)*(P2(0)*(V3(5)*V2(4)
     $ -V3(4)*V2(5))+(P2(1)*(V3(3)*V2(5)-V3(5)*V2(3))+P2(2)*(V3(4)
     $ *V2(3)-V3(3)*V2(4)))))))
      TMP8 = (P1(0)*P3(0)-P1(1)*P3(1)-P1(2)*P3(2)-P1(3)*P3(3))
      VERTEX = COUP*(-CI*(TMP8*TMP9+TMP10*TMP11+TMP14*TMP15+TMP18
     $ *TMP19)+CI*(TMP6*TMP7+TMP12*TMP13+TMP16*TMP17+TMP20*TMP21))
      END


